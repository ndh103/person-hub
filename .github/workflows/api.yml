name: .NET Web Api

on:
  push:
    branches: [ main ]
    paths:
    - PersonHubApi/**
    - .github/workflows/api.yml

  pull_request:
    branches: [ main ]
    paths:
    - PersonHubApi/**
    - .github/workflows/api.yml

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      APP_NAME: person-hub
      PERSONHUB_POSTGRES_PASSWORD: ${{ secrets.PERSONHUB_POSTGRES_PASSWORD }}

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Clean up dependencies (docker-compose)
      run: docker-compose -f "PersonHubApi/docker-compose.test.yaml" down --volumes

    - name: Start dependencies (docker-compose)
      run: docker-compose -f "PersonHubApi/docker-compose.test.yaml" up -d

    - name: Wait for SQL Server container
      uses: jakejarvis/wait-action@master
      with:
        time: '5s'

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore PersonHubApi/PersonHubApi.sln

    - name: Build
      run: dotnet build -c Release PersonHubApi/PersonHubApi.sln --no-restore

    - name: Run Unit Test
      run: dotnet test -c Release PersonHubApi/PersonHub.Api.UnitTest/PersonHub.Api.UnitTest.csproj --no-build --verbosity normal --logger:"console;verbosity=detailed"

    - name: Run Integration Test
      run: dotnet test -c Release PersonHubApi/PersonHub.Api.IntegrationTest/PersonHub.Api.IntegrationTest.csproj --no-build --verbosity normal --logger:"console;verbosity=detailed"

    - name: variable substitution in json, xml, and yml files
      uses: microsoft/variable-substitution@v1
      with:
        files: 'PersonHubApi/PersonHub.Api/appsettings.json'
      env:
        ApplicationSetting.AppName: ${{ env.APP_NAME }}
        DatabaseConnectionConfig.PersonHub.Password: ${{ env.PERSONHUB_POSTGRES_PASSWORD }}

  migrate-database:
    runs-on: ubuntu-latest
    needs: build
    env:
      POSTGRES_HOST: "ec2-34-193-101-0.compute-1.amazonaws.com"
      POSTGRES_PORT: 5432
      POSTGRES_DB: db6bibheb648q8
      POSTGRES_SCHEMA: person-hub
      POSTGRES_USER: bddygoeimcbvwr
      POSTGRES_PASSWORD: ${{ secrets.PERSONHUB_POSTGRES_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Migration
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/PersonHubApi/sql:/flyway/sql
          flyway/flyway:7.12.1-alpine
          -url="jdbc:postgresql://${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}?sslmode=require"
          -schemas=${{ env.POSTGRES_SCHEMA }}
          -user="${{ env.POSTGRES_USER }}"
          -password="${{ env.POSTGRES_PASSWORD }}"
          migrate

  deploy:
    runs-on: ubuntu-latest
    needs: migrate-database
    uses: gonuit/heroku-docker-deploy@v1.3.3
    with:
      email: ${{ env.HEROKU_EMAIL }}

      heroku_api_key: ${{ env.HEROKU_API_KEY }}

      heroku_app_name: ${{ env.APP_NAME }}

      dockerfile_directory: ./PersonHubApi

      dockerfile_name: Dockerfile.heroku

      docker_options: "--no-cache"

      # (Optional, default: "web")
      # Select the process type for which you want the docker container to be uploaded.
      # By default, this argument is set to "web".
      # For more information look at https://devcenter.heroku.com/articles/process-model
      process_type: web
