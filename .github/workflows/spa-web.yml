name: Single Page Web App

on:
  push:
    branches: [ main ]
    paths:
    - person-hub-web/**
    - .github/workflows/spa-web.yml
  pull_request:
    branches: [ main ]
    paths:
    - person-hub-web/**
    - .github/workflows/spa-web.yml
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: person-hub
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Make envfile production to override some values
      uses: SpicyPizza/create-envfile@v1
      with:
        envkey_VUE_APP_AUTH_TYPE: Auth0
        directory: person-hub-web
        file_name: .env.production

    - name: Print content of .env.production files
      run: cat person-hub-web/.env.production

    - name: Check whether there are any valid cached dependencies (to reduce execution time)
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Build
      run: |
        cd person-hub-web
        npm ci
        npm run build

    - name: Build, publish docker image, and deploy to heroku
      uses: gonuit/heroku-docker-deploy@v1.3.3
      with:
        email: ${{ env.HEROKU_EMAIL }}

        heroku_api_key: ${{ env.HEROKU_API_KEY }}

        heroku_app_name: ${{ env.APP_NAME }}

        dockerfile_directory: ./person-hub-web

        dockerfile_name: Dockerfile.heroku

        docker_options: "--no-cache"

        # (Optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, this argument is set to "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web

    # - name: Deploy site to netlify using secrets created on repository
    #   uses: netlify/actions/cli@master
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
    #     NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}
    #   with:
    #     args: deploy --dir=dist --prod
    #     secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'
