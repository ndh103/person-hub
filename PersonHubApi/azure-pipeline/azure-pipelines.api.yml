# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# specific path build
trigger:
  branches:
    include:
    - main
    - releases/*
  paths:
    include:
    - PersonHubApi

resources:
- repo: self

pool:
  vmImage: Ubuntu-16.04

variables:
- group: person-hub-api
- name: tag
  value: '$(Build.BuildId)'
- name: imageRepository
  value: 'person-hub-api'
- name: imageName
  value: 'personhub.azurecr.io/$(imageRepository):$(tag)'
- name: appServiceName
  value: 'person-hub'
- name: dockerRegistryServiceConnection
  value: 'personhubACR'
- name: azureSubscription
  value: $(azure-subscription)
- name: dockerRegistryPassword
  value: $(docker-registry-password)
- name: POSTGRES_HOST
  value: 'ec2-34-193-101-0.compute-1.amazonaws.com'
- name: POSTGRES_PORT
  value: 5432
- name: POSTGRES_DB
  value: db6bibheb648q8
- name: POSTGRES_SCHEMA
  value: person-hub
- name: POSTGRES_USER
  value: bddygoeimcbvwr
- name: POSTGRES_PASSWORD
  value: $(postgres-password)
- name: authentication-type
  value: AzureAdB2C

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build solution
      inputs:
        command: 'build'
        projects: |
             PersonHubApi/PersonHubApi.sln

    - task: DotNetCoreCLI@2
      displayName: Run Unit-test
      inputs:
        command: 'test'
        projects: |
            PersonHubApi/tests/PersonHub.UnitTest/PersonHub.UnitTest.csproj

    - task: DockerCompose@0
      displayName: Start dependencies (docker-compose)
      inputs:
        containerregistrytype: Container Registry
        dockerComposeFile: PersonHubApi/docker-compose.test.yaml
        dockerComposeCommand: 'up -d'

    - task: DotNetCoreCLI@2
      displayName: Run Integratin Test
      inputs:
        command: test
        projects: 'PersonHubApi/tests/PersonHub.IntegrationTest/PersonHub.IntegrationTest.csproj'
        arguments: '-c release --collect:"XPlat Code Coverage"'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: '$(Build.SourcesDirectory)/PersonHubApi/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: PublishBuildArtifacts@1
      displayName: Publish sql artifact
      inputs:
        pathToPublish: PersonHubApi/sql
        artifactName: sql

- stage: Deploy
  displayName: Deploy
  jobs:
  - job: Deploy
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: current
        artifact: sql
        path: $(Pipeline.Workspace)/sql

    - script: |
        docker run --rm --volume $(Pipeline.Workspace)/sql:/flyway/sql flyway/flyway:7.12.1-alpine -url="jdbc:postgresql://$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?sslmode=require" -schemas=$(POSTGRES_SCHEMA) -user="$(POSTGRES_USER)" -password="$(POSTGRES_PASSWORD)" migrate
      displayName: 'Run flyway migration'

    - task: AzureWebAppContainer@1
      displayName: Deploy to Azure WebApp using container
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appServiceName)
        containers: $(imageName)
        appSettings:
          -DOCKER_REGISTRY_SERVER_USERNAME personhub
          -DOCKER_REGISTRY_SERVER_URL personhub.azurecr.io
          -DOCKER_REGISTRY_SERVER_PASSWORD $(dockerRegistryPassword)
          -DatabaseConnectionConfig__PersonHub__Password $(postgres-password)
          -Authentication__ActiveImplementation $(authentication-type)
